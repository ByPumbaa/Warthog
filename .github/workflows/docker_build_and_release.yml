name: Docker Build and Release

on:
  push:
    branches:
      - master  # or the name of your default branch

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Extract branch name
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Docker Build
      run: DOCKER_BUILDKIT=1 docker build . --output build

    - name: Docker Build Windows
      run: DOCKER_BUILDKIT=1 docker build . -f DockerfileWindows --output ./build/windows

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: ${{ env.BRANCH_NAME }}
          release_name: Release ${{ env.BRANCH_NAME }}
          body: |
            Changes in this Release
            - Add your changes here
    - name: Upload Linux Wallet
      id: upload-docker-build-output-wallet
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/wart-wallet
        asset_name: wart-wallet-linux
        asset_content_type: application/octet-stream
    - name: Uploead Linux Node
      id: upload-docker-build-output-node
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/wart-node
        asset_name: wart-node-linux
        asset_content_type: application/octet-stream
    - name: Upload Linux Miner
      id: upload-docker-build-output-MINER
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/wart-miner
        asset_name: wart-miner-linux
        asset_content_type: application/octet-stream
    - name: Upload Windows Miner
      id: upload-docker-build-output-MINER-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/windows/wart-miner.exe
        asset_name: wart-miner-windows.exe
        asset_content_type: application/octet-stream
    - name: Upload Windows Node
      id: upload-docker-build-output-node-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/windows/wart-node.exe
        asset_name: wart-node-windows.exe
        asset_content_type: application/octet-stream
    - name: Upload Windows Wallet
      id: upload-docker-build-output-wallet-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./build/windows/wart-wallet.exe
        asset_name: wart-wallet-windows.exe
        asset_content_type: application/octet-stream